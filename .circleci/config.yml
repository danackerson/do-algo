version: 2
jobs:
  build:
    docker:
      - image: alpine
    working_directory: /go/src/github.com/danackerson/do-algo
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: "Install Docker Engine"
          command: |
            apk add --update curl openssh-client
            VER="18.03.1"
            curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-$VER-ce.tgz && tar --strip-components=1 -xvzf docker-$VER-ce.tgz -C /usr/local/bin

      - run:
          name: "Build + Push Algo Docker Image"
          command: |
            docker build --compress -t danackerson/algo_vpn:vc$CIRCLE_BUILD_NUM .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag danackerson/algo_vpn:vc$CIRCLE_BUILD_NUM danackerson/algo_vpn:latest

            docker push danackerson/algo_vpn:vc$CIRCLE_BUILD_NUM
            docker push danackerson/algo_vpn:latest

            echo vc$CIRCLE_BUILD_NUM > last_docker_push

      - persist_to_workspace:
          root: /go/src/github.com/danackerson/do-algo
          paths:
            - last_docker_push

  deploy:
    docker:
      - image: google/cloud-sdk:alpine
    steps:
      - attach_workspace:
          at: /tmp

      - checkout

      - run:
          name: "deploy container to K8S cluster"
          command: |
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet components install kubectl
            gcloud --quiet beta container clusters get-credentials ${GOOGLE_CLUSTER_NAME}

            if [ -f /tmp/last_docker_push ]; then
              export LAST_DOCKER_PUSH=`cat /tmp/last_docker_push`
            else
              export LAST_DOCKER_PUSH=latest
            fi

            kubectl delete secret algo-env-secrets || true
            kubectl create secret generic algo-env-secrets \
              --from-literal=REGION=$REGION \
              --from-literal=do_token=$digitalOceanToken \
              --from-literal=FILE_TOKEN=$FILE_TOKEN \
              --from-literal=SLACK_TOKEN=$SLACK_TOKEN \

            sed -i -e "s@{{CIRCLE_BUILD_NUM}}@$LAST_DOCKER_PUSH@" deploy.yaml
            kubectl delete job do-algo-deploy || true
            kubectl apply -f deploy.yaml

            echo "Waiting for do-algo job to deploy..."
            sleep 30

            until kubectl get jobs do-algo-deploy -o jsonpath='{.status.conditions[?(@.type=="Complete")].status}' | grep True ; do kubectl logs job/do-algo-deploy --tail=30 ; done
            kubectl logs job/do-algo-deploy | grep "The p12 and SSH keys password for new users is " > out
            cat out | awk '{split($0,a," is "); print a[2]}' | awk '{split($0,b," "); print b[1]}'
            echo "END"
workflows:
  version: 2
  build-deploy:
    jobs:
        - build
        - deploy:
            requires:
              - build
